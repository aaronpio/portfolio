{"version":3,"sources":["components/Nav.module.scss","components/Button.module.scss","components/Footer.module.scss","components/Summary.module.scss","components/Projects.module.scss","components/Experience.module.scss","components/Button.jsx","components/Nav.jsx","components/Summary.jsx","components/Projects.jsx","components/Experience.jsx","components/Education.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Button","selected","name","changeScreen","buttonClass","classNames","styles","button","className","onClick","Nav","buttonNames","screen","navButtonComponent","map","key","nav_bar","header_div","header_text","contact_info","contact_text","href","download","target","src","alt","nav_buttons","Summary","props","article","profile","Projects","Experience","Education","App","useState","setScreen","fade","setFade","useEffect","setTimeout","id","newScreen","indexOfOldScreen","indexOf","indexOfNewScreen","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf896a71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_bar\":\"Nav_nav_bar__18k6a\",\"header_div\":\"Nav_header_div__35kmj\",\"contact_info\":\"Nav_contact_info__kipCK\",\"contact_text\":\"Nav_contact_text__3XaBZ\",\"nav_buttons\":\"Nav_nav_buttons__1EEzP\",\"download\":\"Nav_download__14vGl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__LwMAv\",\"selected\":\"Button_selected__3J2xL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer_bar\":\"Footer_footer_bar__3QqUa\",\"powered_by\":\"Footer_powered_by__2eZLA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"Summary_article__1GCPa\",\"profile\":\"Summary_profile__gasnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"Projects_article__1WQ-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"Experience_article__136IK\"};","import React from \"react\";\nimport styles from \"./Button.module.scss\";\nimport classNames from \"classnames\";\nimport { produceWithPatches } from \"immer\";\n\nconst Button = ({ selected, name, changeScreen }) => {\n  const buttonClass = classNames(styles.button, {\n    [styles.selected]: selected\n  });\n\n  return (\n    <button className={buttonClass} onClick={() => changeScreen(name)}>\n      {name}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport styles from \"./Nav.module.scss\";\nimport Button from \"./Button\";\n\nconst Nav = ({ buttonNames, screen, changeScreen }) => {\n  const navButtonComponent = buttonNames.map(name => {\n    if (name === screen) {\n      return (\n        <Button\n          key={name}\n          selected\n          name={name}\n          changeScreen={changeScreen}\n        ></Button>\n      );\n    } else {\n      return (\n        <Button key={name} name={name} changeScreen={changeScreen}></Button>\n      );\n    }\n  });\n\n  return (\n    <nav className={styles.nav_bar}>\n      <header>\n        <div className={styles.header_div}>\n          <h1 className={styles.header_text}>Aaron Pio Lang</h1>\n          {/* <h2>Full Stack Web Developer</h2> */}\n        </div>\n\n        <div className={styles.contact_info}>\n          <div className={styles.contact_text}>\n            <h3>aaronpiolang@gmail.com</h3>\n            <h3>(519) 301-6960</h3>\n            <a href=\"Aaron Lang Resume.pdf\" download>\n              <h3 className={styles.download}>Download Resume (pdf)</h3>\n            </a>\n          </div>\n          <div>\n            <a href=\"https://www.linkedin.com/in/aaron-p-lang/\" target=\"_blank\">\n              <img src=\"../assets/LinkedIn-logo-blk.png\" alt=\"linkedin\" />\n            </a>\n            <a href=\"https://github.com/aaronpio\" target=\"_blank\">\n              <img src=\"../assets/GitHub-Mark-64px.png\" alt=\"github\" />\n            </a>\n          </div>\n        </div>\n      </header>\n      <div className={styles.nav_buttons}>{navButtonComponent}</div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./Summary.module.scss\";\n\nconst Summary = props => {\n  return (\n    <article className={styles.article}>\n      <div className={styles.profile}>\n        <img src=\"profile-pic.jpg\" alt=\"profile_picture\"></img>\n        <div>\n          <h2>Summary</h2>\n          <p>\n            I am pivoting to a career in web development after four years in the\n            construction industry where I worked as a Civil Engineer and Project\n            Manager. I gained valuable experience leading projects from\n            inception to completion while managing people, timelines and\n            budgets.\n            <br></br>\n            <br></br>I began web development as a hobby two years ago, and it\n            became my passion as I learned new and varied technologies and\n            applied them to personal projects. I decided to pursue my passion\n            full time at the Lighthouse Labs coding bootcamp, to deepen my\n            knowledge and skills as a full stack web developer.\n          </p>\n        </div>\n      </div>\n      <div></div>\n    </article>\n  );\n};\n\nexport default Summary;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./Projects.module.scss\";\n\nconst Projects = props => {\n  return <article className={styles.article}>Projects</article>;\n};\n\nexport default Projects;\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"./Experience.module.scss\";\n\nconst Experience = props => {\n  // const [fade, setFade] = useState(null);\n\n  // useEffect(() => {\n  //   if (props.animate === \"right\") {\n  //     setFade(styles.fadeInRight);\n  //   } else if (props.animate === \"left\") {\n  //     setFade(styles.fadeInLeft);\n  //   } else {\n  //     setFade(null);\n  //   }\n  // }, [props]);\n  return (\n    // <main className={fade}>\n    <article className={styles.article}>Experience</article>\n    //</main>\n  );\n};\n\nexport default Experience;\n","import React from \"react\";\nimport styles from \"./Education.module.scss\";\n\nconst Education = () => {\n  return <>Education</>;\n};\n\nexport default Education;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./App.scss\";\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\nimport Summary from \"./components/Summary\";\nimport Projects from \"./components/Projects\";\nimport Experience from \"./components/Experience\";\nimport Education from \"./components/Education\";\n\nconst App = () => {\n  const [screen, setScreen] = useState(\"About\");\n  const [fade, setFade] = useState(null);\n\n  const buttonNames = [\"About\", \"Projects\", \"Education\", \"Experience\"];\n\n  const navButtonPress = newScreen => {\n    const indexOfOldScreen = buttonNames.indexOf(screen);\n    const indexOfNewScreen = buttonNames.indexOf(newScreen);\n\n    if (indexOfOldScreen < 0 || indexOfNewScreen < 0) {\n      setFade(null);\n    } else if (indexOfOldScreen < indexOfNewScreen) {\n      setFade(\"fadeInRight\");\n    } else if (indexOfOldScreen > indexOfNewScreen) {\n      setFade(\"fadeInLeft\");\n    }\n    setScreen(newScreen);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setFade(null);\n    }, 500);\n  }, [screen]);\n\n  return (\n    <body id=\"style_bar\">\n      <Nav\n        buttonNames={buttonNames}\n        screen={screen}\n        changeScreen={navButtonPress}\n      />\n      <main id={fade}>\n        {screen === \"About\" && <Summary />}\n        {screen === \"Projects\" && <Projects />}\n        {screen === \"Experience\" && <Experience />}\n        {screen === \"Education\" && <Education />}\n      </main>\n      {/* <Footer /> */}\n    </body>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}